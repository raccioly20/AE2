---
title: "Regressão Linear"
author: "Ricardo Accioly"
date: "`r Sys.Date()`"
output:
  html_document:
    toc: yes
    code_download: yes
---

```{r}
#| warning: false
#| message: false
library(tidyverse)
library(kableExtra)

# parametros para imagens
knitr::opts_chunk$set(
  fig.width = 8,
  fig.asp = 0.73,
  fig.retina = 3,
  dpi = 300,
  out.width = "90%"
)
```

## Explorando os dados

## Anscombe

```{r}
anscombe <- read.table("anscombe.txt",header=TRUE)
attach(anscombe)
par(mfrow=c(2,2))
plot(x1,y1,xlim=c(4,20),ylim=c(3,14),main="Dados  1")
abline(lsfit(x1,y1))
plot(x2,y2,xlim=c(4,20),ylim=c(3,14),main="Dados 2")
abline(lsfit(x2,y2))
plot(x3,y3,xlim=c(4,20),ylim=c(3,14),main="Dados 3")
abline(lsfit(x3,y3))
plot(x4,y4,xlim=c(4,20),ylim=c(3,14),main="Dados 4")
abline(lsfit(x4,y4))
```

```{r}
m1 <- lm(y1~x1)
m2 <- lm(y2~x2)
m3 <- lm(y3~x3)
m4 <- lm(y4~x4)
modelos <- rbind(coef(m1),coef(m2),coef(m3),coef(m4))
colnames(modelos) <- c("Intercept", "x") 
modelos
```

## Dados de propaganda

O conjunto de dados contém estatísticas sobre as vendas de um produto em 200 diferentes mercados, juntamente com orçamentos publicitários em cada um desses mercados, para diferentes canais de mídia: TV, rádio e jornal. As vendas estão em milhares de unidades e o orçamento está em milhares de dólares. Os dados são oriundo do livro Introduction to Statistical Learning.

```{r carrega-dados}
library(readxl)
propaganda <- read_excel("Propaganda.xlsx")
summary(propaganda)
```

## Renomeando

```{r renomeando}
propaganda <- propaganda %>% rename(Jornal = Newspaper, Vendas = Sales)

```

## Sumario

```{r sumario}
summary(propaganda)
nrow(propaganda)
```

## Linhas inicias

```{r head}
library(gt)
gt(head(propaganda, 10))
```

## Estatísticas descritivas

```{r}
library(psych)
describe(propaganda)
```

## Histogramas

```{r}
par(mfrow = c(2, 2))
hist(propaganda$TV,breaks="Sturges", main="TV - Regra de Sturges")
hist(propaganda$Radio,breaks="Sturges", main="Radio - Regra de Sturges")
hist(propaganda$Jornal, breaks="Sturges", main="Jornal - Regra de Sturges")
hist(propaganda$Vendas, breaks="Sturges", main="Vendas - Regra de Sturges")
par(mfrow = c(1, 1))
```

## Grafico de Densidade

```{r}
library(patchwork)
g1 <- ggplot(propaganda, aes(TV)) + geom_density()
g2 <- ggplot(propaganda, aes(Radio)) + geom_density()
g3 <- ggplot(propaganda, aes(Jornal)) + geom_density()
g4 <- ggplot(propaganda, aes(Vendas)) + geom_density()
(g1 + g2)/(g3 + g4) 
```

## Box-Plot

```{r}
library(caret)
featurePlot(x = propaganda[ , c("TV", "Radio", "Jornal")], y=factor(rep("Midia",200)), "box")

```

## Grafico de Dispersão

```{r}
featurePlot(x = propaganda[ , c("TV", "Radio", "Jornal")], y = propaganda$Vendas)
```

## Matriz de dispersão

```{r}
pairs.panels(propaganda) 
```

```{r}
library(GGally)
ggpairs(propaganda)
```

## Correlações

```{r}
mcorr <- cor(propaganda)
library(corrplot)
corrplot(mcorr)
corrplot(mcorr,method = "number")
```

## Criando amostra de treino e teste

```{r treino_teste, message=FALSE}
library(caret)
set.seed(21)
y <- propaganda$Vendas
indice_teste <- createDataPartition(y, times = 1, p = 0.20, list = FALSE)

conj_treino <- propaganda %>% slice(-indice_teste)
conj_teste <- propaganda %>% slice(indice_teste)

str(conj_treino)
str(conj_teste)
gt(head(conj_treino, 10))
```

## Regressão Simples $Vendas \sim TV$

```{r 1a_regressão, message=FALSE}
mod1 <- lm( Vendas ~ TV, data = conj_treino)
```

## Informações do ajuste e Resultados

```{r}
names(mod1)
summary(mod1)
sum_mod1 <- summary(mod1)
names(sum_mod1)
```

## Outras informações do Ajuste

```{r}
sum_mod1$sigma
sum_mod1$r.squared
```

## Gráfico da Regressão

```{r}
coeflinear <- mod1$coefficients[1]
coefang <- mod1$coefficients[2]
ggplot(conj_treino, aes(x=TV, y=Vendas)) +
    geom_point() +
    geom_abline(slope = coefang,intercept = coeflinear, color="blue" ) + 
    geom_hline(yintercept=coeflinear, linetype="dashed", color = "red")
```

## Gráfico da Regressão

```{r}
#| warning: false
#| message: false
library(car)
scatterplot(Vendas ~ TV, data = conj_treino, smooth=F)
```

## Intervalo de Confiança para $\beta_0$ e $\beta_1$

```{r}
confint(mod1, level=0.95)
```

## Previsões

```{r}
predict(mod1, data.frame(TV=c(50, 150, 250)), interval = "prediction")
```

## ANOVA

```{r}
anova(mod1)
```

## Analisando os Resíduos

```{r}
par(mfrow = c(2, 2))
plot(mod1)
par(mfrow = c(1, 1))
```

## Verificando Independencia dos Resíduos

```{r}
library(lmtest)
dwtest(mod1)
```

## Verificando Homocedasticidade dos Resíduos

```{r}
bptest(mod1)
```

## Verificando Pontos Afastados

```{r}
#car
influencePlot(mod1)
```

## Verificando Normalidade dos Resíduos

```{r}
library(moments)
jarque.test(sum_mod1$residuals)
```

## Transformação de Box-Cox

```{r}
#car
boxCox(mod1)
```

## Avaliando Modelo com Conjunto de Teste

```{r}
# Erro de Teste
sqrt(mean((conj_teste$Vendas - predict(mod1, conj_teste)) ^ 2)) 
# Erro de Treino
sum_mod1$sigma
```
