c_energ_resid <- as.xts(consumo_residencial)
consumo_energ$data <- as.POSIXlt(consumo_energ$data, format="%Y%m%d")
c_energ_resid <- as.xts(consumo_residencial)
library(readxl)
consumo_energ <- read_excel("consumo_residencial.xlsx")
library(lubridate)
consumo_energ$data <- as_date(consumo_energ$data, format="%Y%m%d")
consumo_energ$data <- as_date(consumo_energ$data, format="%d/%m/%Y")
str(consumo_energ)
library(readxl)
consumo_energ <- read_excel("consumo_residencial.xlsx", )
consumo_energ <- read_excel("consumo_residencial.xlsx", )
consumo_energ$data
consumo_energ$data <- as.date(consumo_energ$data)
consumo_energ$data <- as.Date(consumo_energ$data)
c_energ_resid <- as.xts(consumo_residencial)
c_energ_resid <- as.xts(consumo_energ)
ymd(consumo_energ$data)
consumo_energ$data <- ymd(consumo_energ$data)
c_energ_resid <- as.xts(consumo_energ)
library(readxl)
consumo_energ <- read_excel("consumo_residencial.xlsx", )
library(lubridate)
str(consumo_energ)
consumo_energ$data <- ymd(consumo_energ$data)
c_energ_resid <- as_tsibble(consumo_energ)
library(feasts)
library(dplyr)
library(ggplot2)
c_energ_resid %>% gg_season(mwh_residencial)
ym(consumo_energ$data)
ymd(consumo_energ$data)
c_energ_resid %>% gg_season(mwh_residencial, period = "monthly")
aus_beer
aus_production
data(aus_production)
library(tsibbledata)
data(aus_production)
force(aus_production)
tsibble::fill_gaps(c_energ_resid)
library(readxl)
consumo_energ <- read_excel("consumo_residencial.xlsx", )
library(lubridate)
str(consumo_energ)
consumo_energ$data <- ymd(consumo_energ$data)
library(tsibble)
c_energ_resid <- as_tsibble(consumo_energ)
library(feasts)
library(dplyr)
library(ggplot2)
c_energ_resid %>% gg_season(mwh_residencial, period = "month")
c_energ_resid$data <- yearmonth(c_energ_resid$data)
c_energ_resid %>% gg_season(mwh_residencial)
c_energ_resid <- as_tsibble(consumo_energ)
c_energ_resid <- as_tsibble(c_energ_resid)
library(readxl)
consumo_energ <- read_excel("consumo_residencial.xlsx", )
library(lubridate)
library(tsibble)
str(consumo_energ)
consumo_energ$data <- yearmonth(consumo_energ$data)
c_energ_resid <- as_tsibble(consumo_energ)
library(feasts)
library(dplyr)
library(ggplot2)
c_energ_resid %>% gg_season(mwh_residencial)
c_energ_resid %>% gg_season(log(mwh_residencial))
c_energ_resid %>% gg_subseries(log(mwh_residencial))
library(readxl)
INMET_RIO_DE_JANEIRO_JACAREPAGUA <- read_excel("semanas/INMET_RIO DE JANEIRO _ JACAREPAGUA.xlsx",
col_types = c("date", "text", "date",
"numeric"))
View(INMET_RIO_DE_JANEIRO_JACAREPAGUA)
temperaturas <- read_excel("semanas/INMET_RIO DE JANEIRO _ JACAREPAGUA.xlsx")
library(lubridate)
library(tsibble)
temperaturas <- as_tsibble(temperaturas)
temperaturas <- as_tsibble(temperaturas, index = data_hora)
library(feasts)
library(dplyr)
library(ggplot2)
temperaturas %>% gg_tsdisplay(Temperatura_grausC)
temperaturas %>% gg_tsdisplay()
temperaturas %>% gg_tsdisplay(Temperatura_grausC)
str(temperaturas)
library(readxl)
consumo_energ <- read_excel("semanas/consumo_residencial.xlsx", )
str(consumo_energ)
consumo_energ$data <- yearmonth(consumo_energ$data)
c_energ_resid <- as_tsibble(consumo_energ)
library(feasts)
library(dplyr)
library(ggplot2)
c_energ_resid %>% gg_season(log(mwh_residencial))
c_energ_resid %>% gg_subseries(log(mwh_residencial))
install.packages(c("arules", "arulesViz", "AsioHeaders", "astsa", "BART", "BH", "BiocManager", "bit", "blob", "blogdown", "bookdown", "broom", "broom.helpers", "bslib", "C50", "cachem", "caret", "chron", "classInt", "cli", "clue", "collections", "colorspace", "commonmark", "conquer", "copula", "cubature", "Cubist", "curl", "DALEX", "data.table", "datawizard", "dbplyr", "dendextend", "deSolve", "diceR", "digest", "distributional", "dplyr", "DT", "dtplyr", "e1071", "easystats", "effectsize", "emmeans", "energy", "evaluate", "extrafont", "fable", "FactoMineR", "fansi", "fastmap", "fBasics", "fCopulae", "feasts", "ff", "flexmix", "flexsurv", "flextable", "fma", "FNN", "fontawesome", "forcats", "forecast", "Formula", "fpc", "fpp2", "fpp3", "fs", "future", "gam", "gamlss", "gapminder", "gargle", "gdtools", "GenSA", "geometries", "gert", "ggfortify", "ggplot2", "ggpubr", "ggrepel", "ggsci", "ggspatial", "gh", "git2r", "glmnet", "globals", "gmp", "googledrive", "googlesheets4", "gower", "greybox", "gsl", "gss", "gtable", "gtools", "gtsummary", "haven", "hexbin", "highr", "Hmisc", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "ingredients", "insight", "inum", "ipred", "ISLR2", "isoband", "janitor", "jpeg", "jsonlite", "kernlab", "klaR", "knitr", "ks", "languageserver", "latex2exp", "lava", "leaflet", "learnr", "listenv", "lme4", "locfit", "lubridate", "lwgeom", "MachineShop", "magick", "maptools", "markdown", "matrixStats", "mets", "modelbased", "modelr", "multcomp", "naniar", "NMF", "odbc", "officedown", "officer", "openssl", "openxlsx", "packrat", "pagedown", "parallelly", "parameters", "party", "partykit", "pbkrtest", "pdftools", "performance", "pillar", "pkgbuild", "pkgdown", "pkgload", "pkgmaker", "png", "polspline", "progressr", "ps", "psych", "Publish", "purrr", "qpdf", "questionr", "ragg", "randomForestSRC", "randtoolbox", "raster", "rbibutils", "Rcpp", "RcppArmadillo", "RcppTOML", "RCurl", "readr", "readxl", "recipes", "renv", "report", "reticulate", "rgdal", "rgl", "riskRegression", "rlang", "rmarkdown", "Rmpfr", "rms", "RMySQL", "rngWELL", "roxygen2", "rsample", "rsconnect", "RSQLite", "rstatix", "rstpm2", "Rttf2pt1", "rvg", "s2", "sass", "scatterplot3d", "see", "seriation", "servr", "sf", "sfheaders", "shiny", "slider", "smooth", "sortable", "sourcetools", "sp", "sparklyr", "spData", "stars", "statmod", "stringi", "stringr", "styler", "survex", "svglite", "tclust", "terra", "testthat", "tibble", "tidygraph", "tidyr", "tidyverse", "timechange", "timeDate", "timereg", "tinytex", "tm", "tree", "triebeard", "truncnorm", "tseries", "TSP", "tswge", "units", "utf8", "vcd", "vctrs", "visdat", "vroom", "whisker", "wk", "xaringan", "xfun", "xgboost", "XML", "xts", "yaml"))
install.packages(c("MASS", "survival"), lib="E:/Program Files/R/R-4.2.3/library")
library(readxl)
consumo_energ <- read_excel("semanas/consumo_residencial.xlsx", )
library(lubridate)
library(tsibble)
str(consumo_energ)
consumo_energ$data <- yearmonth(consumo_energ$data)
c_energ_resid <- as_tsibble(consumo_energ)
library(feasts)
library(dplyr)
library(ggplot2)
c_energ_resid %>% gg_season(log(mwh_residencial))
c_energ_resid %>% gg_subseries(log(mwh_residencial))
c_energ_resid %>% ACF(mwh_residencial)
c_energ_resid %>% ACF(mwh_residencial) %>% autoplot()
c_energ_resid %>% ACF(log(mwh_residencial))
c_energ_resid
c_energ_resid_04_07 <- c_energ_resid %>% filter_index( ~ "2007-12")
c_energ_resid_04_07 %>% ACF(log(mwh_residencial))
c_energ_resid_04_07 %>% ACF(log(mwh_residencial)) %>% autoplot()
library(quantmod)
getSymbols("AAPL")
dim(AAPL)
head(AAPL)
tail(AAPL)
chart_Series(AAPL)
chartSeries(AAPL,theme="white")
getSymbols("AAPL",from="2020-01-02", to="2022-09-30")
str(AAPL)
acf(AAPL)
library(tidyverse)
library(astsa)
AAPL_C <- AAPL[,"AAPL.Close"]
chartSeries(AAPL_C,theme="white")
acf1(AAPL_C)
acf2(AAPL_C)
library(quantmod)
getSymbols("AAPL",from="2020-01-02", to="2022-09-30")
dim(AAPL)
head(AAPL)
tail(AAPL)
# A biblioteca tem uma forma diferenciada de apresentação das series financeiras
chartSeries(AAPL,theme="white")
str(AAPL)
library(quantmod)
getSymbols("AAPL",from="2020-01-02", to="2022-12-31")
dim(AAPL)
head(AAPL)
tail(AAPL)
# A biblioteca tem uma forma diferenciada de apresentação das series financeiras
chartSeries(AAPL,theme="white")
str(AAPL)
#| warning: false
summary(AAPL)
AAPL_C <- AAPL[,"AAPL.Close"]
chartSeries(AAPL_C,theme="white")
# Plot AirPassengers
plot(AirPassengers)
# View the start and end dates of AirPassengers
start(AirPassengers)
end(AirPassengers)
# Use time(), deltat(), frequency(), and cycle() with AirPassengers
time(AirPassengers)
deltat(AirPassengers)
frequency(AirPassengers)
cycle(AirPassengers)
library(fpp3)
global_economy %>%
filter(Country %in% c("Australia","Brazil")) %>%
autoplot(GDP)
global_economy %>%
filter(Country %in% c("Australia","Brazil")) %>%
autoplot(GDP / Population)
max(global_economy$Year)
print_retail <- aus_retail %>%
filter(Industry == "Newspaper and book retailing") %>%
group_by(Industry) %>%
index_by(Year = year(Month)) %>%
summarise(Turnover = sum(Turnover))
print_retail %>% autoplot(Turnover)
aus_economy <- global_economy %>%
filter(Code == "AUS")
print_retail <- print_retail %>%
left_join(aus_economy, by = "Year") %>%
mutate(Adj_turnover = Turnover / CPI * 100) %>%
pivot_longer(c(Turnover, Adj_turnover),
names_to = "Type", values_to = "Turnover"
)
# Plot both on same graph
print_retail %>%
ggplot(aes(x = Year, y = Turnover, col = Type)) +
geom_line() +
labs(
title = "Turnover: Australian print media industry",
y = "$AU"
)
library(stringr)
exporta <- readxl::read_xls("exportacoes-ipea.xls")
exporta <- readxl::read_xls("E:/Onedrive/Github/AE2/semanas/exportacoes-ipea.xls")
summary(exporta)
glimpse(exporta)
str_sub(exporta$Data,5,5) <- "-"
exporta$Data <- str_c(exporta$Data,"-01")
glimpse(exporta)
exporta$Data <- as_date(exporta$Data, format="%Y-%m-%d")
exporta$Data <- yearmonth(exporta$Data)
exporta <- exporta %>% as_tsibble(
index = Data)
str(exporta)
exporta %>% autoplot()
exporta <- exporta %>% mutate(trans1 = sqrt(Exportacoes),
trans2 = Exportacoes^0.33333,
trans3 = log(Exportacoes),
trans4 = Exportacoes^-1)
exporta %>%  autoplot(trans1)
exporta %>%  autoplot(trans2)
exporta %>%  autoplot(trans3)
exporta %>%  autoplot(trans4)
exporta %>% gg_season()
dcmp <- exporta %>% model(stl = STL(Exportacoes))
components(dcmp)
components(dcmp) %>% autoplot()
components(dcmp) %>% gg_subseries(season_year)
consumo <- readxl::read_xls("E:/Onedrive/Github/AE2/semanas/consumo_residencial.xlsx")
consumo <- readxl::read_xlsx("E:/Onedrive/Github/AE2/semanas/consumo_residencial.xlsx")
consumo$data <- seq(as.Date("2004-01-01"), as.Date("2022-06-01"), by = "1 month")
consumo <- readxl::read_xlsx("E:/Onedrive/Github/AE2/semanas/consumo_residencial.xlsx")
View(consumo)
consumo$data <- seq(as.Date("2004-01-01"), as.Date("2022-12-01"), by = "1 month")
# consumo$data <- yearmonth(consumo$data)
cons_red <- tsibble(yearmonth(consumo$data), value=consumo$mwh_residencial,
group=rep("residencial",228), key = group)
View(cons_red)
cons_red <- cons_red %>% mutate(mwh_raiz = sqrt(mwh_residencial),
mwh_rcub = (mwh_residencial)^0.33333,
mwh_log = log(mwh_residencial),
mwh_inv = (-mwh_residencial)^-1)
View(cons_red)
cons_red <- cons_red %>% mutate(mwh_raiz = sqrt(value),
mwh_rcub = (value)^0.33333,
mwh_log = log(value),
mwh_inv = (value)^-1)
autoplot(cons_red) + xlab("Ano") + ylab("") +
ggtitle("Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
consumo %>% select(data,mwh_raiz) %>% autoplot() + xlab("Ano") + ylab("") +
ggtitle("Raiz do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_red %>% select(data,mwh_raiz) %>% autoplot() + xlab("Ano") + ylab("") +
ggtitle("Raiz do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
View(cons_red)
cons_red %>% select(data,mwh_raiz) %>% autoplot() + xlab("Ano") + ylab("") +
ggtitle("Raiz do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_red %>% select(`<mth>`,mwh_raiz) %>% autoplot() + xlab("Ano") + ylab("") +
ggtitle("Raiz do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_red %>% select(`<mth>`,mwh_raiz) %>% autoplot() + xlab("Ano") + ylab("") +
ggtitle("Raiz do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
consumo %>% select(`<mth>`,mwh_rcub) %>% autoplot() + xlab("Ano") + ylab("") +
ggtitle("Raiz Cúbica do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_red %>% select(`<mth>`,mwh_raiz) %>% autoplot() + xlab("Ano") + ylab("") +
ggtitle("Raiz do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_red %>% select(`<mth>`,mwh_rcub) %>% autoplot() + xlab("Ano") + ylab("") +
ggtitle("Raiz Cúbica do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_red %>% select(`<mth>`,mwh_log) %>% autoplot() + xlab("Ano") + ylab("") +
ggtitle("Log do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_red %>% select(`<mth>`,mwh_inv) %>% autoplot() + xlab("Ano") + ylab("") +
ggtitle("Inversa do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
library(forecast)
BoxCox.lambda(cons_red$value)
autoplot(diff(cons_red))
library(readxl)
consumo_resid <- read_xlsx("e:/Onedrive/github/ae2/semanas/consumo_residencial.xlsx")
summary(consumo_resid)
library(tsibble)
c_resid <- as_tsibble(consumo_resid)
consumo_resid$data <- seq(as.Date("2004-01-01"), as.Date("2022-12-01"), by = "1 month")
cons_red <- tsibble(yearmonth(consumo_resid$data), value=consumo_resid$mwh_residencial)
View(cons_red)
cons_red <- tsibble(index = yearmonth(consumo_resid$data), value=consumo_resid$mwh_residencial)
cons_red <- tsibble(yearmonth(consumo_resid$data), value=consumo_resid$mwh_residencial)
cons_resid <- tsibble(yearmonth(consumo_resid$data), value=consumo_resid$mwh_residencial)
cons_resid %>% rename(ano_mes = `<mth>`)
library(dplyr)
cons_resid %>% rename(ano_mes = `<mth>`)
View(cons_resid)
cons_resid <- cons_resid %>% rename(ano_mes = `<mth>`)
View(cons_resid)
autoplot(cons_red) + xlab("Ano") + ylab("") +
ggtitle("Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
library(fpp3)
autoplot(cons_red) + xlab("Ano") + ylab("") +
ggtitle("Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_resid <- cons_resid %>% mutate(mwh_raiz = sqrt(value),
mwh_rcub = (value)^0.33333,
mwh_log = log(value),
mwh_inv = (value)^-1)
cons_resid %>% select(ano_mes,mwh_raiz) %>% autoplot() + xlab("Ano") + ylab("") +
ggtitle("Raiz do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_resid %>% select(ano_mes,mwh_rcub) %>% autoplot() + xlab("Ano") + ylab("") +
ggtitle("Raiz Cúbica do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_resid %>% select(ano_mes,mwh_log) %>% autoplot() + xlab("Ano") + ylab("") +
ggtitle("Log do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_resid %>% select(ano_mes,mwh_inv) %>% autoplot() + xlab("Ano") + ylab("") +
ggtitle("Inversa do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_resid %>% autoplot(vars(ano_mes,mwh_raiz)) + xlab("Ano") + ylab("") + ggtitle("Raiz do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
library(fable)
library(tsibbledata)
library(tsibble)
tsibbledata::gafa_stock %>%
autoplot(vars(Close, log(Close)))
gafa_stock
cons_resid %>% autoplot(vars(ano_mes,mwh_raiz)) + xlab("Ano") + ylab("") + ggtitle("Raiz do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_resid
detach("package:fpp3", unload = TRUE)
library(fable)
library(tsibbledata)
library(tsibble)
cons_resid %>% autoplot(vars(ano_mes,mwh_raiz)) + xlab("Ano") + ylab("") + ggtitle("Raiz do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_resid %>% autoplot(vars(mwh_raiz)) + xlab("Ano") + ylab("") + ggtitle("Raiz do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_resid <- cons_resid %>% mutate(mwh_raiz = sqrt(value),
mwh_rcub = (value)^0.33333,
mwh_log = log(value),
mwh_inv = (value)^-1)
cons_resid %>% autoplot(vars(mwh_raiz)) + xlab("Ano") + ylab("") + ggtitle("Raiz do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_resid %>% autoplot(vars(mwh_rcub)) + xlab("Ano") + ylab("") +   ggtitle("Raiz Cúbica do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_resid %>% autoplot(vars(mwh_log)) + xlab("Ano") + ylab("") +   ggtitle("Log do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
cons_resid %>% autoplot(vars(mwh_inv)) + xlab("Ano") + ylab("") +   ggtitle("Inversa do Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
View(cons_resid)
library(tsibble)
consumo_resid$data <- seq(as.Date("2004-01-01"), as.Date("2022-12-01"), by = "1 month")
cons_resid <- tsibble(yearmonth(consumo_resid$data), value=consumo_resid$mwh_residencial)
library(dplyr)
cons_resid <- cons_resid %>% rename(ano_mes = `<mth>`, mwh = value)
library(fable)
library(ggplot2)
cons_resid %>% autoplot(vars(mhw)) + xlab("Ano") + ylab("") +
ggtitle("Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
library(tsibble)
consumo_resid$data <- seq(as.Date("2004-01-01"), as.Date("2022-12-01"), by = "1 month")
cons_resid <- tsibble(yearmonth(consumo_resid$data), value=consumo_resid$mwh_residencial)
library(dplyr)
cons_resid <- cons_resid %>% rename(ano_mes = `<mth>`, mhw = value)
library(fable)
library(ggplot2)
cons_resid %>% autoplot(vars(mhw)) + xlab("Ano") + ylab("") +
ggtitle("Consumo Residencial Total no Brasil (MWh) - Fonte EPE")
library(readxl)
consumo_energ <- read_excel("semanas/consumo_residencial.xlsx", )
library(lubridate)
library(tsibble)
str(consumo_energ)
consumo_energ$data <- yearmonth(consumo_energ$data)
str(consumo_energ)
c_energ_resid <- as_tsibble(consumo_energ)
View(c_energ_resid)
library(readxl)
consumo_energ <- read_excel("e:/Onedrive/github/ae2/semanas/consumo_residencial.xlsx")
summary(consumo_resid)
library(readxl)
consumo_energ <- read_excel("e:/Onedrive/github/ae2/semanas/consumo_residencial.xlsx")
summary(consumo_energ)
library(tsibble)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
autoplot(prodcerv)
library(tsibble)
library(fable)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
autoplot(prodcerv)
teste4 <- prodcerv %>% filter_index("1960 Q1" ~ "1974 Q4")
decompose(teste4)
library(tsibble)
library(fable)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
autoplot(prodcerv)
library(tsibble)
library(fable)
library(dplyr)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
prodcerv <- prodcerv %>% rename(prodcerv=value)
autoplot(prodcerv)
library(tsibble)
library(fable)
library(dplyr)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
prodcerv <- prodcerv %>% rename(prodcerv=value)
autoplot(vars(prodcerv))
library(tsibble)
library(fable)
library(dplyr)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
prodcerv <- prodcerv %>% rename(prodcerv=value)
prodcerv %>% autoplot(vars(prodcerv))
library(tsibble)
library(fable)
library(dplyr)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
prodcerv <- prodcerv %>% rename(prodcerv=value)
prodcerv %>% autoplot(vars(prodcerv))
library(tsibble)
library(fable)
library(dplyr)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
str
str(prodcerv)
prodcerv <- prodcerv %>% rename(pcerv=value)
str(prodcerv)
prodcerv %>% autoplot(vars(prodcerv))
prodcerv %>% autoplot(vars(pcerv))
prodcerv <- prodcerv %>% rename(pcerv=value)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
str(prodcerv)
prodcerv <- prodcerv %>% rename(pcerv=value)
str(prodcerv)
prodcerv %>% autoplot(vars(pcerv))
library(tsibble)
library(fable)
library(dplyr)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
str(prodcerv)
prodcerv <- prodcerv %>% rename(pcerv=value)
prodcerv %>% autoplot(vars(pcerv))
library(tsibble)
library(fable)
library(dplyr)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
str(prodcerv)
prodcerv <- prodcerv %>% rename(pcerv=value)
str(prodcerv)
prodcerv %>% autoplot(vars(pcerv))
library(tsibble)
library(fable)
library(dplyr)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
str(prodcerv)
prodcerv <- prodcerv %>% rename(pcerv=value) %>% autoplot(vars(pcerv))
library(tsibble)
library(fable)
library(dplyr)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
str(prodcerv)
prodcerv %>% rename(pcerv=value) %>% autoplot(vars(pcerv))
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
library(tsibble)
library(fable)
library(dplyr)
prodcerv <- scan("e:/Onedrive/github/ae2/semanas/beerprod.dat")
prodcerv <- ts(prodcerv, start = 1960, freq = 4)
prodcerv <- as_tsibble(prodcerv)
prodcerv %>% autoplot(vars(value))
View(prodcerv)
library(fpp2)
data(ausbeer)
autoplot(ausbeer)
ggseasonplot(ausbeer)
library(fpp2)
data(ausbeer)
autoplot(ausbeer)
library(tsibble)
ausbeer2 <- as_tsibble(ausbeer)
serie2 <- ausbeer2 %>% filter_index("2005 Q1" ~ "2009 Q4")
serie1 <- ausbeer2 %>% filter_index("1960 Q1" ~ "1964 Q4")
library(tsibble)
ausbeer2 <- as_tsibble(ausbeer)
serie1 <- ausbeer2 %>% filter_index("1960 Q1" ~ "1964 Q4")
ggseasonplot(serie1)
library(tsibble)
ausbeer2 <- as_tsibble(ausbeer)
serie1 <- ausbeer2 %>% filter_index("1960 Q1" ~ "1964 Q4")
gg_season(serie1)
library(tsibble)
library(feasts)
ausbeer2 <- as_tsibble(ausbeer)
serie1 <- ausbeer2 %>% filter_index("1960 Q1" ~ "1964 Q4")
gg_season(serie1)
gg_subseries(serie1)
serie2 <- ausbeer2 %>% filter_index("2005 Q1" ~ "2009 Q4")
gg_season(serie2)
gg_subseries(serie2)
library(tsibble)
library(feasts)
ausbeer2 <- as_tsibble(ausbeer)
serie1 <- ausbeer2 %>% filter_index("1960 Q1" ~ "1964 Q4")
gg_season(serie1)
gg_subseries(serie1)
serie2 <- ausbeer2 %>% filter_index("2005 Q1" ~ "2009 Q4")
gg_season(serie2)
gg_subseries(serie2)
